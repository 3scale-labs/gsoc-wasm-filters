admin:
  access_log_path: /dev/null
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9000
bootstrap_extensions:
- name: envoy.bootstrap.wasm
  typed_config:
    '@type': type.googleapis.com/envoy.extensions.wasm.v3.WasmService
    singleton: true
    config:
      name: "singleton_service"
      root_id: "singleton_service"
      configuration: 
        "@type": type.googleapis.com/google.protobuf.StringValue
        value: |
          {
            "delta_store_config": {
              "capacity": {{or .SingletonCapacity "100"}},
              "periodical_flush": "{{or .SingletonPeriodicFlush "60"}}s",
              "retry_duration": "{{or .SingletonRetryDuration "30"}}s",
              "await_queue_capacity": {{or .SingletonQueueCapacity "200"}},
              "flush_mode": "{{or .SingletonFlushMode "Default"}}"
            }
          }
      vm_config:
        runtime: "envoy.wasm.runtime.v8"
        vm_id: "my_vm_id"
        code:
          local:
            filename: "/usr/local/bin/singleton_service.wasm"
        configuration: {}
        allow_precompiled: true
static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 9095
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: backend_service
          http_filters:
          - name: envoy.filters.http.wasm
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
              config:
                name: 3scale-auth
                root_id: "threescale-wasm-auth"
                vm_config:
                  vm_id: "1"
                  runtime: envoy.wasm.runtime.v8
                  configuration:
                    "@type": type.googleapis.com/google.protobuf.StringValue
                    value: "vm configuration here!"
                  code:
                    local:
                      filename: "/usr/local/bin/threescale_wasm_auth.wasm"
                  allow_precompiled: false
                configuration:
                  "@type": type.googleapis.com/google.protobuf.StringValue
                  value: |
                    {
                      "api": "v1",
                      "system": {
                        "name": "system-name",
                        "upstream": {
                          "name": "outbound|443||multitenant.3scale.net",
                          "url": "https://istiodevel-admin.3scale.net/",
                          "timeout": 5000
                        },
                        "token": "atoken"
                      },
                      "backend": {
                        "name": "backend-name",
                        "upstream": {
                          "name": "outbound|443||su1.3scale.net",
                          "url": {{or .UpstreamURL "\"http://0.0.0.0:3000\""}},
                          "timeout": {{or .UpstreamTimeout "5000"}}
                        },
                        "extensions": [
                          "no_body"
                        ]
                      },
                      "services": [
                        {
                          "id": "{{ .ServiceID }}",
                          "token": "{{ .ServiceToken }}",
                          "authorities": [
                            "*"
                          ],
                          "credentials": {
                            "app_id": [
                              {
                                "header": {
                                  "keys": [
                                    "x-app-id"
                                  ]
                                }
                              },
                              {
                                "query_string": {
                                  "keys": [
                                    "app_id",
                                    "application_id"
                                  ]
                                }
                              },
                              {
                                "filter": {
                                  "path": [
                                    "envoy.filters.http.jwt_authn",
                                    "0"
                                  ],
                                  "keys": [
                                    "azp",
                                    "aud"
                                  ]
                                }
                              },
                              {
                                "header": {
                                  "keys": [
                                    "x-jwt-payload"
                                  ],
                                  "ops": [
                                    {
                                      "decode": "base64_urlsafe"
                                    },
                                    {
                                      "format": {
                                        "json": {
                                          "path": [],
                                          "keys": [
                                            "azp",
                                            "aud"
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "header": {
                                  "keys": [
                                    "authorization"
                                  ],
                                  "ops": [
                                    {
                                      "format": {
                                        "joined": {
                                          "separator": " ",
                                          "max": 2,
                                          "indexes": [1]
                                        }
                                      }
                                    },
                                    {
                                      "decode": "base64_urlsafe"
                                    },
                                    {
                                      "format": {
                                        "joined": {
                                          "separator": ":",
                                          "max": 2,
                                          "indexes": [0, 1]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            ],
                            "app_key": [
                              {
                                "header": {
                                  "keys": [
                                    "x-app-key"
                                  ]
                                }
                              },
                              {
                                "query_string": {
                                  "keys": [
                                    "app_key",
                                    "application_key"
                                  ]
                                }
                              }
                            ],
                            "user_key": [
                              {
                                "query_string": {
                                  "keys": [
                                    "api_key"
                                  ],
                                  "ops": [
                                    {
                                      "format": {
                                        "joined": {
                                          "separator": ":",
                                          "max": 2,
                                          "indexes": [
                                            0
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "mapping_rules": [
                            {
                              "method": "GET",
                              "pattern": "/",
                              "usages": [
                                {
                                  "name": "hits",
                                  "delta": 1
                                }
                              ]
                            }{{or .MappingRules ""}}
                          ]
                        }
                      ],
                      "passthrough_metadata": true
                    }
                fail_open: false
          - name: envoy.filters.http.wasm
            typed_config:
              "@type": type.googleapis.com/udpa.type.v1.TypedStruct
              type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
              value:
                config:
                  name: "cache_filter"
                  root_id: "cache_filter"
                  configuration: 
                    "@type": type.googleapis.com/google.protobuf.StringValue
                    value: |
                      {}
                  vm_config:
                    runtime: "envoy.wasm.runtime.v8"
                    vm_id: "my_vm_id"
                    code:
                      local:
                        filename: "/usr/local/bin/cache_filter.wasm"
                    configuration: {}
                    allow_precompiled: true
          - name: envoy.filters.http.router
            typed_config: {}
  clusters:
  - name: backend_service
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: backend_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: backend_service
                port_value: 8000
  
  - name: outbound|443||su1.3scale.net
    connect_timeout: 5s
    type: logical_dns
    lb_policy: round_robin
    upstream_connection_options:
      tcp_keepalive: {}
    load_assignment:
      cluster_name: outbound|443||su1.3scale.net
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: listener
                port_value: 3000
